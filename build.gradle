buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:${ANDROID_GRADLE_PLUGIN_VERSION}"
    }
}

import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.library'

def getNdkBuildName() {
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        return "ndk-build.cmd"
    } else {
        return "ndk-build"
    }
}

def getNdkBuildFullPath() {
    // we allow to provide full path to ndk-build tool
    if (hasProperty('ndk.command')) {
        return property('ndk.command')
    }
    // or just a path to the containing directiry
    if (hasProperty('ndk.dir')) {
        def path = property('ndk.dir')
        if (!path.endsWith(File.separator)) {
            path += File.separator
        }
        return path + getNdkBuildName()
    }
    // if none of above is provided, we assume ndk-build is already in $PATH
    return getNdkBuildName()
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"

    defaultConfig {
      minSdkVersion 9
      targetSdkVersion 17
    }

    sourceSets {
      main {
        manifest.srcFile 'AndroidManifest.xml'
        java.srcDirs = ['java'] 
        jni.srcDirs = []
      }
    }

    task ndkBuildRelease(type: Exec) {
      commandLine getNdkBuildFullPath(), '-C', file('native/crypto/').absolutePath,
       'NDK_APPLICATION_MK=${PWD}/native/Application.mk',
       'NDK_MODULE_PATH=${PWD}/native/third-party/',
       'APP_BUILD_SCRIPT=${PWD}/native/crypto/Android.mk',
       'NDK_OUT=${PWD}/build/ndk/release/obj',
       'NDK_LIBS_OUT=${PWD}/build/bundles/release/jni'
    }

    tasks.withType(JavaCompile) {
      compileTask -> compileTask.dependsOn ndkBuildRelease
    }
}

// Configure gradle.properties to do maven builds
if (!project.hasProperty('sonatypeRepo') ||
    !project.hasProperty('sonatypeUsername') ||
    !project.hasProperty('sonatypePassword')) {
  return;
}

// Maven Push

apply plugin: 'maven'
apply plugin: 'signing'

version = $VERSION_NAME
group = $GROUP

configurations {
    archives {
        extendsFrom configurations.default
    }
}

signing {
    required { has("release") && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
    configuration = configurations.archives
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: sonatypeRepo) {
            authentication(userName: sonatypeUsername, password: sonatypePassword)
        }

        pom.project {
            name 'Conceal'
            packaging 'aar'
            description 'Conceal is an easy to use, performant crypto library for android.'
            url 'http://facebook.github.io/conceal'

            scm {
                url 'scm:git@github.com:facebook/conceal.git'
                connection 'scm:git@github.com:facebook/conceal.git'
                developerConnection 'scm:git@github.com:facebook/conceal.git'
            }

            licenses {
                license {
                    name 'BSD 2-Clause License'
                    url 'https://github.com/facebook/conceal/blob/master/LICENSE'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'subodh'
                    name 'Subodh Iyengar'
                    email 'mani.subodh@gmail.com'
                }
            }
        }
    }
}
